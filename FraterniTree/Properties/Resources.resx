<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About {0}</value>
  </data>
  <data name="AboutBox" xml:space="preserve">
    <value>AboutBox</value>
  </data>
  <data name="ActiveOnlyFilter" xml:space="preserve">
    <value>*Active Only*</value>
  </data>
  <data name="ActiveOnlyTree" xml:space="preserve">
    <value>*Active Only* Tree</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddBig" xml:space="preserve">
    <value>Add a Big</value>
  </data>
  <data name="AddMember" xml:space="preserve">
    <value>Add a Member:</value>
  </data>
  <data name="AllFilter" xml:space="preserve">
    <value>*All*</value>
  </data>
  <data name="AllImagesFilter" xml:space="preserve">
    <value>All Image Files|*.png;*.bmp;*.gif;*.jpg;*.jpeg;*.jpe;*.jfif;*.tif;*.tiff|PNG|*.png|Bitmap|*.bmp|GIF|*.gif|JPEG|*.jpg;*.jpeg;*.jpe;*.jfif|TIFF|*.tif;*.tiff|All Files|*.*</value>
  </data>
  <data name="AllTree" xml:space="preserve">
    <value>*All* Tree</value>
  </data>
  <data name="AndAbout" xml:space="preserve">
    <value>&amp;About...</value>
  </data>
  <data name="AndAddMember" xml:space="preserve">
    <value>&amp;Add Member</value>
  </data>
  <data name="AndDisplayRoot" xml:space="preserve">
    <value>&amp;Display Root of \'*All*\' Tree</value>
  </data>
  <data name="AndExportXml" xml:space="preserve">
    <value>&amp;Export XML...</value>
  </data>
  <data name="AndFile" xml:space="preserve">
    <value>&amp;File</value>
  </data>
  <data name="AndGraphicalTreeControl" xml:space="preserve">
    <value>&amp;Graphical Tree Control</value>
  </data>
  <data name="AndHelp" xml:space="preserve">
    <value>&amp;Help</value>
  </data>
  <data name="AndMembersWithoutBigs" xml:space="preserve">
    <value>&amp;Members Without Bigs</value>
  </data>
  <data name="AndOk" xml:space="preserve">
    <value>&amp;OK</value>
  </data>
  <data name="AndQuit" xml:space="preserve">
    <value>&amp;Quit</value>
  </data>
  <data name="AndSupport" xml:space="preserve">
    <value>&amp;Support... (Web Page)</value>
  </data>
  <data name="AndTreeView" xml:space="preserve">
    <value>&amp;Tree View</value>
  </data>
  <data name="AndView" xml:space="preserve">
    <value>&amp;View</value>
  </data>
  <data name="AndWindow" xml:space="preserve">
    <value>&amp;Window</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="AutoSaveFileExtension" xml:space="preserve">
    <value>.sav</value>
  </data>
  <data name="BigIs" xml:space="preserve">
    <value>Big:</value>
  </data>
  <data name="Brother" xml:space="preserve">
    <value>Brother</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>YitboSoft</value>
  </data>
  <data name="CompanyWebsite" xml:space="preserve">
    <value>http://yitbosoft.com/?contact</value>
  </data>
  <data name="ConnectionString" xml:space="preserve">
    <value>server={0};port={1};userid={2};password={3};database={4};allow user variables=true</value>
  </data>
  <data name="ConnectToDatabase" xml:space="preserve">
    <value>Connect to Database</value>
  </data>
  <data name="CopyRight" xml:space="preserve">
    <value>Copyright © 2016</value>
  </data>
  <data name="CurrentlyActive" xml:space="preserve">
    <value>Currently Active?</value>
  </data>
  <data name="DeleteNodeConfirmation" xml:space="preserve">
    <value>Are you sure you want to delete this node: {0}?\n\n All its children nodes will be re-assigned to the parent.</value>
  </data>
  <data name="DotBak" xml:space="preserve">
    <value>.BAK</value>
  </data>
  <data name="DotSav" xml:space="preserve">
    <value>.sav</value>
  </data>
  <data name="DotXml" xml:space="preserve">
    <value>.xml</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Fall" xml:space="preserve">
    <value>Fall</value>
  </data>
  <data name="FemaleName" xml:space="preserve">
    <value>Sorori</value>
  </data>
  <data name="FirstNameIs" xml:space="preserve">
    <value>First Name:</value>
  </data>
  <data name="FixedLabelWidths" xml:space="preserve">
    <value>Fixed Label Widths</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Flags" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Flags.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="GenerationsAre" xml:space="preserve">
    <value>Generations:</value>
  </data>
  <data name="InitiationTermIs" xml:space="preserve">
    <value>Initiation Term:</value>
  </data>
  <data name="LastNameIs" xml:space="preserve">
    <value>Last Name:</value>
  </data>
  <data name="LeftClickSelectEdit" xml:space="preserve">
    <value>Left click to select and edit</value>
  </data>
  <data name="LittlesAre" xml:space="preserve">
    <value>Little(s):</value>
  </data>
  <data name="MakeTheTreeParent" xml:space="preserve">
    <value>Make This Tree Parent</value>
  </data>
  <data name="MaleName" xml:space="preserve">
    <value>Fraterni</value>
  </data>
  <data name="MembersWithNoBigs" xml:space="preserve">
    <value>Members Without Bigs:</value>
  </data>
  <data name="MyTree" xml:space="preserve">
    <value>MyTree</value>
  </data>
  <data name="NextGeneration" xml:space="preserve">
    <value>Next Generation</value>
  </data>
  <data name="NodeRemovalConfirmation" xml:space="preserve">
    <value>Node Removal Confirmation</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Parent" xml:space="preserve">
    <value>Parent</value>
  </data>
  <data name="ParentNodeName" xml:space="preserve">
    <value>Parent Node Name</value>
  </data>
  <data name="PreviousGeneration" xml:space="preserve">
    <value>Previous Generation</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>FraterniTree</value>
  </data>
  <data name="PromptUserForFullName" xml:space="preserve">
    <value>Please enter the full name of {0}\'s Big:</value>
  </data>
  <data name="PromptUSerForParentNodeName" xml:space="preserve">
    <value>Please enter a name for the parent XML node...\n Example: "DeltaSigmaPhi-AlphaEta"</value>
  </data>
  <data name="RemoveNode" xml:space="preserve">
    <value>Remove Node</value>
  </data>
  <data name="SaveAsXml" xml:space="preserve">
    <value>Save the exported xml as...</value>
  </data>
  <data name="SaveImageAs" xml:space="preserve">
    <value>Save &amp;Image as...</value>
  </data>
  <data name="SaveXml" xml:space="preserve">
    <value>&amp;Save XML</value>
  </data>
  <data name="SiblingSpacing" xml:space="preserve">
    <value>Sibling Spacing:</value>
  </data>
  <data name="Sister" xml:space="preserve">
    <value>Sister</value>
  </data>
  <data name="Spring" xml:space="preserve">
    <value>Spring</value>
  </data>
  <data name="SQLInsertIntoBrothers" xml:space="preserve">
    <value>INSERT INTO Brothers (Last, First, IniMonth, IniYear, Big, NextSibling, FirstLittle) VALUES (@Last, @First, @IniMonth, @IniYear, @Big, @NextSibling, @FirstLittle) ON DUPLICATE KEY UPDATE IniMonth=values(IniMonth), IniYear=values(IniYear), Big=values(Big), NextSibling=values(NextSibling), FirstLittle=values(FirstLittle)</value>
  </data>
  <data name="SQLSelectAllBrothers" xml:space="preserve">
    <value>SELECT * FROM Brothers</value>
  </data>
  <data name="SubtreeSpacing" xml:space="preserve">
    <value>Subtree Spacing:</value>
  </data>
  <data name="ToggleDescendants" xml:space="preserve">
    <value>Toggle Hide Descendants</value>
  </data>
  <data name="ToggleTreeView" xml:space="preserve">
    <value>Double click to toggle tree view.</value>
  </data>
  <data name="Tree" xml:space="preserve">
    <value>Tree</value>
  </data>
  <data name="TreeParent" xml:space="preserve">
    <value>Tree Parent:</value>
  </data>
  <data name="UpToParent" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\UpToParent.PNG;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version {0}</value>
  </data>
  <data name="VersionNumber" xml:space="preserve">
    <value>v1.0</value>
  </data>
  <data name="VerticalSpacing" xml:space="preserve">
    <value>Vertical Spacing:</value>
  </data>
  <data name="Winter" xml:space="preserve">
    <value>Winter</value>
  </data>
  <data name="XMLDocumentFilter" xml:space="preserve">
    <value>XML Document|*.xml|All Files|*.*</value>
  </data>
  <data name="ZoomIn" xml:space="preserve">
    <value>Zoom &amp;In</value>
  </data>
  <data name="ZoomOut" xml:space="preserve">
    <value>Zoom &amp;Out</value>
  </data>
  <data name="NameConstructor" xml:space="preserve">
    <value>{0} (1}</value>
  </data>
  <data name="XmlVersion" xml:space="preserve">
    <value>1.0</value>
  </data>
  <data name="XmlEncoding" xml:space="preserve">
    <value>UTF-8</value>
  </data>
</root>